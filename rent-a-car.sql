-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.brands
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT brands_pkey PRIMARY KEY (id),
    CONSTRAINT brands_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.cars
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    plate_number character varying(15) COLLATE pg_catalog."default" NOT NULL,
    kilometer integer NOT NULL,
    daily_price double precision NOT NULL,
    model_id integer NOT NULL,
    color_id integer NOT NULL,
    status boolean NOT NULL DEFAULT true,
    CONSTRAINT cars_pkey PRIMARY KEY (id),
    CONSTRAINT cars_plate_number_key UNIQUE (plate_number)
);

CREATE TABLE IF NOT EXISTS public.colors
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT colors_pkey PRIMARY KEY (id),
    CONSTRAINT colors_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer NOT NULL,
    status boolean NOT NULL DEFAULT true,
    CONSTRAINT customers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    title character varying COLLATE pg_catalog."default" NOT NULL,
    salary double precision NOT NULL,
    user_id integer NOT NULL,
    status boolean NOT NULL DEFAULT true,
    CONSTRAINT employees_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.insurance_companies
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT insurance_companies_pkey PRIMARY KEY (id),
    CONSTRAINT insurance_companies_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.insurances
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    coverage character varying(200) COLLATE pg_catalog."default" NOT NULL,
    daily_price double precision NOT NULL,
    company_id integer NOT NULL,
    status boolean NOT NULL DEFAULT true,
    CONSTRAINT insurances_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.models
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(25) COLLATE pg_catalog."default" NOT NULL,
    brand_id integer NOT NULL,
    CONSTRAINT models_pkey PRIMARY KEY (id),
    CONSTRAINT models_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.rentals
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    start_date date NOT NULL,
    end_date date NOT NULL,
    return_date date,
    start_kilometer integer NOT NULL,
    end_kilometer integer,
    total_price double precision NOT NULL,
    discount double precision NOT NULL,
    car_id integer NOT NULL,
    customer_id integer NOT NULL,
    employee_id integer NOT NULL,
    insurance_id integer NOT NULL,
    CONSTRAINT rentals_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    firstname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(15) COLLATE pg_catalog."default" NOT NULL,
    nationality_number character varying(20) COLLATE pg_catalog."default" NOT NULL,
    address character varying(200) COLLATE pg_catalog."default" NOT NULL,
    birth_date date NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_phone_number_nationality_number_key UNIQUE (email, phone_number, nationality_number)
);

ALTER TABLE IF EXISTS public.cars
    ADD CONSTRAINT "FK_COLOR_CAR" FOREIGN KEY (color_id)
    REFERENCES public.colors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cars
    ADD CONSTRAINT "FK_MODEL_CAR" FOREIGN KEY (model_id)
    REFERENCES public.models (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.customers
    ADD CONSTRAINT "FK_USER_CUSTOMER" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT "FK_USER_EMPLOYEE" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.insurances
    ADD CONSTRAINT "FK_COMPANY_INSURANCE" FOREIGN KEY (company_id)
    REFERENCES public.insurance_companies (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.models
    ADD CONSTRAINT "FK_BRAND_MODEL" FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_CAR_RENTAL" FOREIGN KEY (car_id)
    REFERENCES public.cars (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_CUSTOMER_RENTAL" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_EMPLOYEE_RENTAL" FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_INSURANCE_RENTAL" FOREIGN KEY (insurance_id)
    REFERENCES public.insurances (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;